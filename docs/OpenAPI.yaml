openapi: 3.0.0
info:
  description: |
    This is a sample Petstore server.  You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.0"
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/malik.the5th@gmail.com/inbuscap/1.0.0
  - url: 'https://petstore.swagger.io/v2'
tags:
  - name: user
    description: Organize User Data
  - name: business
    description: Organize business  data
  - name: investment
    description: Organize Invest Data
  - name: verification
    description: Organize verification for admin

paths:
  /users:
    post:
      tags:
        - user
      summary: Add a New User
      description: Registering New User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                email:
                  type: string
                handphone:
                  type: string
                password:
                  type: string
                ktp:
                  type: string
                npwp:
                  type: string
            example:
              fullname: "Muhammad Bagir"
              email: "bagir3008@gmail.com"
              handphone: "085912345678"
              password: "aezakmi123"
              ktp: "3573051204030001"
              npwp: "123456789003000"
      responses:
        '201':
          description: New User Added Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 201
                message: "Registered Successfully"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - user
      security:
        - bearerAuth: []
      summary: See Your Profile
      description: See Your Profile Using Token
      responses:
        '200':
          description: "Successfully Get MyProfile"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataResponse'
              example: 
                code: 200
                data:
                  avatar: "uploads/image.jpg" #atau default
                  fullname: "Muhammad Bagir"
                  email: "bagir3008@gmail.com"
                  handphone: "085912345678"
                  ktp: "3573052004030001"
                  npwp: "123456789003000"
                  photo_ktp: ""
                  photo_npwp: ""
                  photo_selfie: ""
                message: "Successfully Get MyProfile"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - user
      security:
        - bearerAuth: []
      summary: Update Data User
      description: Update Data User Using Token
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                fullname:
                  type: string
                email:
                  type: string
                handphone:
                  type: string
                password:
                  type: string
                ktp:
                  type: string
                npwp:
                  type: string
            example:
              fullname: "Muhammad Bagir"
              email: "bagir3008@gmail.com"
              handphone: "085912345678"
              password: "pass12345"
              ktp: "3573052004030001"
              npwp: "123456789003000"
      responses:
        '201':
          description: "Update Data Successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example: 
                code : 201
                message: "successfully updated user"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - user
      security:
        - bearerAuth: []
      summary: Delete User
      responses:
        '200':
          description: "Successfully Delete User"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 200
                message: "Successfully Deleted User"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /login:
    post:
      tags:
        - user
      summary: Login Using HP or email and Password
      description: Input HP or email and Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: "bagir3008@gmail.com"
              password: "pass12345"
      responses:
        '200':
          description: "Login Successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataResponse'
              example: 
                code: 200
                data:
                  fullname: "Muhamad Khomsin Ariseno"
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTIzMzQ3NDgsImlhdCI6MTcxMjMyMzk0OCwiaWQiOiIxIiwiaXNfYWN0aXZlIjpmYWxzZSwiaXNfYWRtaW4iOmZhbHNlfQ.eMbNxJBjJMZF6q3SnHtXb76CMp7Psxecjtd6MA8GoR8"
                message: "Login Successfully"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'    
  /business:
    post:
      tags:
        - business
      security:
        - bearerAuth: []
      summary: Add New business
      description: Add New business Using Token
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                # - image
                - title
                - description
                - amount
                - proposal
                - share
              properties:
                image:
                  type: string
                  format: binary
                title:
                  type: string
                description:
                  type: string
                amount:
                  type: integer
                proposal:
                  type: string
                  format: binary 
                share:    
                  type: integer
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - amount
              properties:
                title:
                  type: string
                description:
                  type: string
                amount:
                  type: integer
            example:
              title: "Inbuscap.id"
              description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
              amount: 15000000
      responses:
        '201':
          description: "New business Added Successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 201
                message: "New business Added Successfully"
                data: 
                  id: 1
                  fullname: "Muhammad Bagir"
                  title: "Inbuscap.id"
                  image: "http://... .com"
                  description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                  amount: 15000000
                  share: 30
                  proposal: "http://... .com"

        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - business
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: integer
          description: menampilkan business sesuai status
        - in: query
          name: page
          schema:
            type: integer
          description: halaman yang ingin ditampilkan
      summary: See All business
      description: See All business
      responses:
        '200':
          description: "Successfully See business"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataArrayResponse'
              example:
                code: 200
                data:
                  - id: 1
                    fullname: "Muhammad Bagir"
                    title: "Inbuscap.id"
                    image: "http://... .com"
                    description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                    amount: 15000000
                    collected: 5000000
                  - id: 2
                    fullname: "Malik"
                    title: "Perternakan Sapi"
                    image: "http://... .com"
                    description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                    amount: 50000000
                    collected: 5000000
                  - id: 3
                    fullname: "Ade Prastyo"
                    title: "Cafe Loop"
                    image: "http://... .com"
                    description: "saya akan menciptakan cafe yang akan ..."
                    amount: 15000000
                    collected: 0
                message: "Successfully See business"
                pagination:
                  page: 1
                  page_size: 10
                  total_pages: 1
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /business/{business_id}:
    get:
      tags:
        - business
      parameters:
        - name: business_id
          in: path
          description: ID business yang ingin di ubah
          required: true
          schema:
            type: string
          example: 1
      summary: See Detail business
      responses:
        '200':
          description: "Successfully See business With Comments"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataResponse'
              example: 
                code : 200
                data:
                  id: 1
                  fullname: "Muhammad Bagir"
                  title: "Inbuscap.id"
                  image: "http://... .com"
                  description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                  amount: 15000000
                  collected: 5000000
                  share: 10
                  proposal: "http://... .com"
                message: "Successfully Get business With Comment"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - business
      security:
        - bearerAuth: []
      parameters:
        - name: business_id
          in: path
          description: ID business yang ingin di lihat
          required: true
          schema:
            type: string
          example: 1
      summary: Delete business
      description: Delete business Using Token
      responses:
        '200':
          description: "Successfully Delete business"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example: 
                code : 200
                message: "Successfully Delete business"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - business
      security:
        - bearerAuth: []
      parameters:
        - name: business_id
          in: path
          description: ID business yang ingin di lihat
          required: true
          schema:
            type: string
          example: 1
      summary: Edit business
      description: Edit business Using Token
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                # - image

                - description

              properties:
                image:
                  type: string
                  format: binary
                title:
                  type: string
                description:
                  type: string
                amount:
                  type: integer
                business:
                  type: string
                  format: binary
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - amount
              properties:
                title:
                  type: string
                description:
                  type: string
                amount:
                  type: integer
            example:
              title: "Inbuscap.id"
              description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
              amount: 15000000
      responses:
        '200':
          description: "Successfully Edit business"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 200
                message: "Successfully Edit business"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /report:
    post:
      tags:
        - business
      parameters:
        - name: business_id
          in: path
          description: ID business yang ingin di lihat
          required: true
          schema:
            type: string
          example: 1
      security:
        - bearerAuth: []
      summary: Add New Business report and profit share, deducted from wallet
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                # - image
                - proposal_id
                - date
                - document
                - amount
              properties:
                proposal_id:
                  type: integer
                date:
                  type: string
                document:
                  type: string
                  format: binary
                amount:
                  type: integer

      responses:
        '201':
          description: "New Report Added Successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataResponse'
              example:
                code: 201
                message: "New Report Added Successfully"
                data:
                  id: 1
                  title: "Perternakan"
                  date: "02/08/2024"
                  document: "http://... report.pdf"
                  amount: 1000000

        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'    
  /investments:
    get:
      tags:
        - investment
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: integer
          description: menampilkan business sesuai status
        - in: query
          name: page
          schema:
            type: integer
          description: halaman yang ingin ditampilkan
      summary: See All business invested
      description: See All business invested
      responses:
        '200':
          description: "Successfully See business"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataArrayResponse'
              example:
                code: 200
                data:
                  - id: 1
                    fullname: "Muhammad Bagir"
                    title: "Inbuscap.id"
                    image: "http://... .com"
                    description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                    amount: 15000000
                    collected: 5000000
                  - id: 2
                    fullname: "Malik"
                    title: "Perternakan Sapi"
                    image: "http://... .com"
                    description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                    amount: 50000000
                    collected: 5000000
                  - id: 3
                    fullname: "Ade Prastyo"
                    title: "Cafe Loop"
                    image: "http://... .com"
                    description: "saya akan menciptakan cafe yang akan ..."
                    amount: 15000000
                    collected: 0
                message: "Successfully See business"
                pagination:
                  page: 1
                  page_size: 10
                  total_pages: 1
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - investment

      security:
        - bearerAuth: []
      summary: Send capital
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - business_id
                - nominal
              properties:
                business_id:
                  type: integer
                nominal:
                  type: integer
            example:
              business_id: 1
              nominal: 5000000
      responses:
        '201':
          description: "successfully sent capital"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example: 
                code : 201
                message: "successfully sent capital"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - investment

      security:
        - bearerAuth: []
      summary: Cancel sending capital
      responses:
        '200':
          description: "successfully canceled the capital transfer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 200
                message: "successfully canceled the capital transfer"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /investments/{business_id}:
    get:
      tags:
        - investment
      parameters:
        - name: business_id
          in: path
          description: ID business yang ingin di lihat
          required: true
          schema:
            type: string
          example: 1
      summary: See Detail invested business
      responses:
        '200':
          description: "Successfully retrieved invested business "
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataResponse'
              example: 
                code : 200
                data:
                  id: 1
                  fullname: "Muhammad Bagir"
                  title: "Inbuscap.id"
                  image: "http://... .com"
                  description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                  amount: 15000000
                  collected: 15000000
                  profit: 10
                  business: "http://... .com"
                  investment: 5000000
                message: Successfully retrieved invested business
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /verifications/users:
    put:
      security:
        - bearerAuth: []
      tags:
        - verification
      summary: Send photos
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
              - photo_ktp
              - photo_npwp
              - photo_selfie
              properties:
                photo_ktp:
                 type: string
                 format: binary
                photo_npwp:
                 type: string
                 format: binary
                photo_selfie:
                  type:  string
                  format: binary
          
      responses:
        '201':
          description: "request was created successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example: 
                code : 201
                message: "data was added successfully"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - verification
      security:
        - bearerAuth: []
      summary: Get pending verifications
      parameters:
        - in: query
          name: status
          schema:
            type: integer
          description: menampilkan akun sesuai status
          
      responses:
        '200':
          description: "verification requests retrieved"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataArrayResponse'
              example: 
                code : 200
                message:  "verification requests retrieved"
                data:
                  - id: 1
                    fullname: "Alibaba"
                    photo_ktp: "uploads/image.jpg"
                    photo_npwp: "uploads/image.jpg"
                    photo_selfie: "uploads/image.jpg"
                    ktp: "3623074107640027"
                    npwp: "3623074107640027"
                    phone: "085912345678"
                    status : 0
                  - id: 2
                    fullname: "John Doe"
                    photo_ktp: "uploads/image.jpg"
                    photo_npwp: "uploads/image.jpg"
                    photo_selfie: "uploads/image.jpg"
                    ktp: "1231234564567890"
                    npwp: "1231234564567890"
                    phone: "085912123678"
                    status : 0
                  - id: 3
                    fullname: "Aladdin"
                    photo_ktp: "uploads/image.jpg"
                    photo_npwp: "uploads/image.jpg"
                    photo_selfie: "uploads/image.jpg"
                    ktp: "3623074107612327"
                    npwp: "3623074107612327"
                    phone: "088912345678"
                    status : 0
                pagination:
                  page: 1
                  page_size: 10
                  total_pages: 1
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /verifications/users/{user_id}: 
    put: 
      tags:
        - verification
      parameters:
        - name: user_id
          in: path
          description: ID verif/ ID user yang ingin di edit
          required: true
          schema:
            type: string
          example: 1 
      security:
        - bearerAuth: []
      summary: "verify the user"
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                  status : 
                    type: integer
                    example: 1
      responses:
        '200':
          description: "behasil mengubah data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataResponse'
              example: 
                code : 200
                message: "berhasil mengubah data"
                data:
                  - id: 1
                    fullname: "Alibaba"
                    photo_ktp: "uploads/image.jpg"
                    photo_npwp: "uploads/image.jpg"
                    photo_selfie: "uploads/image.jpg"
                    ktp: "3623074107640027"
                    npwp: "3623074107640027"
                    phone: "085912345678" #ditanyakan nanti, butuh ini nggak kalo kalo user bad upload
                    status : 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /verifications/business:
    get:
      tags:
        - verification
      security:
        - bearerAuth: []
      summary: Get pending verifications
      parameters:
        - in: query
          name: status
          schema:
            type: integer
          description: menampilkan business sesuai status
          
      responses:
        '200':
          description: "verification requests retrieved"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataArrayResponse'
              example: 
                code : 200
                message:  "verification requests retrieved"
                data:
                  - id: 1
                    fullname: "Muhammad Bagir"
                    title: "Inbuscap.id"
                    image: "http://... .com"
                    description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                    amount: 15000000
                    share: 30
                    proposal: "http://... .com"
                    status : 0
                  - id: 2
                    fullname: "Andy"
                    title: "Geprek Croissant"
                    image: "http://... .com"
                    description: "saya akan menciptakan bisnis kuliner yang meliputi sekrot ..."
                    amount: 15000000
                    share: 30
                    proposal: "http://... .com"
                    status : 0
                  - id: 3
                    fullname: "Dimas Adi"
                    title: "Kakhus - Kakus Khusus"
                    image: "http://... .com"
                    description: "saya akan menciptakan lapangan bisnis yang meliputi sekrot ..."
                    amount: 15000000
                    share: 30
                    proposal: "http://... .com"
                    status : 0
                pagination:
                  page: 1
                  page_size: 10
                  total_pages: 1
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /transactions/returns:
    get:
      tags:
        - transaction
      security:
        - bearerAuth: []
      summary: Get available returns from investment
      responses:
        '200':
          description: "Returns retrieved successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataArrayResponse'
              example:
                code: 200
                message: "Returns retrieved successfully"
                data:
                  - id: 1
                    title: "Perternakan"
                    date: "02/08/2024"
                    document: "http://... report.pdf"
                    amount: 200000
                  - id: 2
                    title: "Ayam Geprek"
                    date: "02/08/2024"
                    document: "http://... report.pdf"
                    amount: 150000
                  - id: 3
                    title: "Teh Earl Black"
                    date: "02/08/2024"
                    document: "http://... report.pdf"
                    amount: 300000
                pagination:
                  page: 1
                  page_size: 10
                  total_pages: 1

        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'    
  /transactions/topup:
    post:
      tags:
        - transaction
      security:
        - bearerAuth: []
      summary: Send  money to wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
          
              properties:
                amount:
                  type: integer
    
            example:
           
              amount: 5000000
      responses:
        '201':
          description: "successfully placed order"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataResponse'
              example: 
                code : 201
                message: "successfully placed order"
                data:
                  - transaction_id: 3
                    order_id: "746c1186-cd81-47ac-9e6d-7c8254dff0e1"
                    user_id: 1
                    amount: 300000
                    status: "Success"
                    token: "0b4f7ab4-4b60-4c17-9fe6-4d75ec03cbb0"
                    url: "https://app.sandbox.midtrans.com/snap/v4/redirection/0b4f7ab4-4b60-4c17-9fe6-4d75ec03cbb0"
                    created_at: 2016-06-19 15:02:22

        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /transactions/withdraw:
    post:
      tags:
        - transaction
      security:
        - bearerAuth: []
      summary: Send money to bank account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bank
                - bank_account
                - nominal
              properties:
                bank: 
                  type: string
                bank_account:
                  type: integer
                nominal:
                  type: integer
            example:
              bank: "bca"
              bank_account: 0011223344
              nominal: 5000000
      responses:
        '201':
          description: "successfully creates request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example: 
                code : 201
                message: "successfully creates request"
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ApiDataResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        data:
          type: object
        message:
          type: string
    ApiDataArrayResponse:
      type: object
      properties:
        code:
          type: integer
          format: int
        message:
          type: string
        data:
          type: array
          items:
            type: object
        pagination:
         type: object
         properties:
          page:
            type: integer
          page_size:
            type: integer
          total_pages:
            type: integer

  responses:
    '201':
      description: "success registered"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
          example: 
            code: 201
            message: "successfully sent data"
    '400':
      description: "Bad Required"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
          example: 
            code: 400
            message: "the data sent is incorrect"
    '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
              example:
                message: "invalid or expired jwt"
    '404':
      description: "data tidak ditemukan"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
          example: 
            code: 404
            message: "data tidak ditemukan"
    '500':
      description: "server error"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
          example:
            code: 500
            message: "an error occurred in the server process"
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT